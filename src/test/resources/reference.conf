{
  server {
    port = 12345
    apiKey = "<api-key-value>"
  }
  repositories {
    configurationsTableName = "status-board-services-test-only"
    notificationsTableName = "status-board-notifications-test-only"
    statusesTableName = "status-board-statuses-test-only"
  }
  providers {
    dynamoDB {
      endpointOverride = "http://localhost:8000", # uses default DynamoDB endpoint when not present
    }
    msTeams {
      webhookUrl = "https://absacorp.webhook.office.com/webhookb2/cdab3b4b-3a63-4301-bc10-223fe664d14c@5be1f46d-495f-465b-9507-996e8c8cdcb6/IncomingWebhook/dfdef7e98b874fffa4bd02ccda50ca3c/5626d7ac-4195-4371-84b0-2d2dd6fda4a9/V2ybjXO7jSkHYGP6g0HZyX2sK-_U6dNQ3bJWijbj4EbhE1"
    }
    email {
      smtpHost = "smtp.absa.co.za"
      senderAddress = "BDToolsNotifications.integration.test@absa.africa"
      testTargetAddress_msteams = "633f5d46.groups.absa.africa@za.teams.ms" // currently relay outta absa fails with error
      testTargetAddress = "put.your.name.here@absa.africa"
    }
  }

  checkers {
    awsEmr {
      green = [
        "RUNNING"
      ]
      amber = [
      ]
      red = [
        "STARTING",
        "BOOTSTRAPPING",
        "WAITING",
        "TERMINATING",
        "TERMINATED",
        "TERMINATED_WITH_ERRORS"
      ]
    },
    awsRds {
      green = [
        "Available"
      ]
      amber = [
        "Backing-up",
        "Configuring-enhanced-monitoring",
        "Configuring-iam-database-auth",
        "Configuring-log-exports",
        "Converting-to-vpc",
        "Delete-precheck",
        "Resetting-master-credentials",
        "Renaming",
        "Storage-config-upgrade",
        "Storage-optimization",
        "Upgrading"
      ]
      red = [
        "Creating",
        "Deleting",
        "Failed",
        "Inaccessible-encryption-credentials",
        "Inaccessible-encryption-credentials-recoverable",
        "Incompatible-network",
        "Incompatible-option-group",
        "Incompatible-parameters",
        "Incompatible-restore",
        "Insufficient-capacity",
        "Maintenance",
        "Modifying",
        "Moving-to-vpc",
        "Rebooting",
        "Restore-error",
        "Starting",
        "Stopped",
        "Stopping",
        "Storage-full"
      ]
    },
    awsRdsCluster {
      green = [
        "Available"
      ]
      amber = [
        "Backing-up",
        "Failing-over",
        "Promoting",
        "Preparing-data-migration",
        "Renaming",
        "Resetting-master-credentials",
        "Storage-optimization",
        "Update-iam-db-auth",
        "Upgrading"
      ]
      red = [
        "Backtracking",
        "Cloning-failed",
        "Creating",
        "Deleting",
        "Inaccessible-encryption-credentials",
        "Inaccessible-encryption-credentials-recoverable",
        "Maintenance",
        "Migrating",
        "Migration-failed",
        "Modifying",
        "Starting",
        "Stopped",
        "Stopping"
      ]
    }
  }
}
